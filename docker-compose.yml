version: '2'
services:
  app:
    build:
      context: ./docker/app
      dockerfile: Dockerfile
    image: "${COMPOSE_PROJECT_NAME}/app"
    ports:
      - "${APP_PORT}:80"
    environment:
      CONTAINER_ENV: "${APP_ENV}"
      #XDEBUG_HOST: "${XDEBUG_HOST}"
      WWWUSER: "${WWWUSER}"
    volumes:
      - .:/var/www/html
    networks:
      - vessel
  #  node:
  #    build:
  #      context: ./docker/node
  #      dockerfile: Dockerfile
  #      args:
  #        uid: "${WWWUSER}"
  #    image: vessel/node
  #    user: node
  #    volumes:
  #     - .:/var/www/html
  #    networks:
  #     - vessel
  mysql:
    image: mysql:8.0
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - vesselmysql:/var/lib/mysql
#      - ./docker/mysql/conf.d:/etc/mysql/conf.d
#      - ./docker/mysql/logs:/var/log/mysql
    networks:
      - vessel
  mysqltesting:
    image: mysql:8.0
    ports:
      - "${MYSQL_TESTING_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - vesselmysqltesting:/var/lib/mysql
    networks:
      - vessel
  redis:
    image: redis:alpine
    volumes:
      - vesselredis:/data
    networks:
      - vessel
networks:
  vessel:
    driver: "bridge"
volumes:
  vesselmysql:
    driver: "local"
  vesselmysqltesting:
    driver: "local"
  vesselredis:
    driver: "local"
